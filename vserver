vserver vs1 build -m debootstrap -n vs1 --pkgbase /var/cache/apt/archives/ --hostname vs1 -- -d lenny
sudo vserver etch1 build -m debootstrap --hostname etch1  --interface eth0:192.168.199.199/32  --  -d etch -- --unpack-tarball /media/free/etch/etch.tgz


mkdir /vservers/template/
dump 0f - /usr | (cd /vservers/template/ && restore rf -)
#/sbin/vserver <VSERVER_NAME> build -m <BUILD_METHOD> --hostname <VSERVER_HOSTNAME> --interface <VSERVER_NAME>=<NET_DEVICE>:<IP>/<CIDR>
/sbin/vserver calvin build -m skeleton --hostname calvin --interface calvin=eth0:192.168.0.10/24
cp -a /vservers/template/. /vservers/calvin/
vi /vservers/calvin/etc/hosts
/etc/init.d/vprocunhide start
/sbin/vserver calvin start
/sbin/vserver calvin enter


/sbin/vserver <VSERVER_NAME> [ start | stop | restart | enter ]
/sbin/vserver-stat



#make devices available for vserver also
============= BEGIN devlinks.sh ==============
#!/bin/bash

prefix=/d3/vservers/farmer
dirs="
 dev/snd/
 dev/dri/
"

devices="
 /dev/snd/seq
 /dev/snd/pcmC0D1p
 /dev/snd/controlC0
 /dev/snd/pcmC0D0c
 /dev/snd/pcmC0D0p
 /dev/dri/card0
 /dev/radio0
 /dev/video0
 /dev/video1
 /dev/vbi0
"

echo mkdir -p $dirs

ls -l $devices | while read perm fd user group major minor date time file; do
    newfile=$prefix/${file/\//}
    echo mknod $newfile c ${major//,/} $minor;
    echo chmod --reference=$file $newfile;
    echo chown --reference=$file $newfile;
 done

============= END devlinks.sh ============

