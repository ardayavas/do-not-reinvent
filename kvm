


# boot on your own disk
sudo kvm -m 512 /dev/sda

# for management console
Ctrl-Alt-2
quit

# http://www.linux-kvm.org/page/HOWTO1
qemu-img create -f qcow2 vdisk.img 10G 
kvm -hda vdisk.img -cdrom /path/to/boot-media.iso -boot d -m 384
kvm vdisk.img -m 384






#sudo aptitude install kvm libvirt-bin -R
#sudo aptitude install qemu
#sudo aptitude install -R kvm libvirt-bin qemu  virtinst
#sudo aptitude install bridge-utils

sudo aptitude install -R kvm libvirt-bin qemu virtinst bridge-utils

/etc/network/interfaces
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet static
        # bu kismi eth0 tanimindan aynen kopyalayabilirsiniz
        address 192.168.27.104
        network 192.168.27.0
        netmask 255.255.255.0
        broadcast 192.168.27.255
        gateway 192.168.27.3
        # asil tanim kismi burasi
        bridge_ports eth0
        bridge_fd 9
        bridge_hello 2
        bridge_maxage 12
        bridge_stp off

sudo virt-install --name test --ram 1000 --vcpus 2 --file /userdata/test.qcow2 --file-size 10 --network bridge:br0 --vnc --accelerate --hvm --cdrom /userdata/debian-505-amd64-netinst.iso --os-type linux --os-variant debianLenny 




#enlarging a qcow2
qemu-img convert -f qcow2 small-img.qcow2 -O raw raw-image.raw
dd if=/dev/zero of=raw-image.raw bs=1M count=0 seek=[desired-size in M]
sudo kvm -cdrom gparted-live-0.6.3-3.iso -hda raw-image.raw
qemu-img convert -f raw raw-image.raw -O qcow2 larger-image.qcow2




#hvm flags
egrep '^flags.*(vmx|svm)' /proc/cpuinfo
grep flags /proc/cpuinfo | egrep --color 'vmx|svm'

